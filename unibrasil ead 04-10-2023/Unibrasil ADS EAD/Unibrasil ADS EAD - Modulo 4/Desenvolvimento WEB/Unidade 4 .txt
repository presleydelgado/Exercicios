Aula 1 

Objetivo da Unidade 4 

Implementar estruturas de decisão e de repetição

Páginas dinâmicas e responsivas 

Incorporar interface amigável a uma página HTML e utilizar ferramentas de depuração.

Introdução 

Já foi visto que Javascript é uma linguagem de programação utilizada para adicionar interatividade a uma página HTML e para a aplicação de regras de um negócio que implementa cálculos , decisões e repetições.

Outra situação importante no desenvolvimento de sistemas é a possibilidade de depuração do algoritmo de programação aplicado a estrutura da página WEB. Essa depuração auxilia na verificação , validação e busca de erros.

No desenvolvimento de um sistema também é importante a criação de uma interface amigável que permita interação , facilidade de navegação e uma fluidez na utilização de um sistema.

Para o desenvolvimento de sistemas ou sites amigáveis e que utilizem a HTML e o Javascript , existe o React , que conforme a definição dos seus criadores (react.org) "é uma biblioteca JavaScript declarativa , eficiente e flexível para a criação de interface do usuário (UI)".


Aula 2 

Estrutura de Decisão - IF e ELSE

As declarações condicionais permitem implementar as tomadas de decisão no javascript , já foi visto anteriormente a condicional IF, nesta Unidade serão vistas outras condicionais, que podem ajudar em algumas situações de programação.

Quando se tem mais de um valor a ser verificado é possível utilizar a condicional ELSE IF , que possibilita a utilização de várias condições.

-------------------------------

Estrutura condicional IF

let filial = 2;

if (filial ==1)
	{document.write("filial 1")}
if (filial ==2)
	{document.write("filial 2")}
if (filial ==3)
	{document.write("filial 3")}

else 
	{document.write("filial 4")}

-------------------------------------

Estrutura condicional IF ELSE 

Quando se tem mais do que um valor a ser verificado, é possível utilizar a condicional ELSE IF que possibilita a utilização de várias condições.

let filial = 2;

if (filial == 1)
	{document.write("filial 1")}
	else if (filial == 2)
		{document.write("filial 2")}
		else if (filial == 3)
			{document.write("filial 3")}
			else
				{document.write("filial 4")}



Aula 3

Estrutura de Decisão - Aninhamento

É comum colocar uma condicional IF dentro da outra quando existe mais do que um tipo de valor a ser testado.

Pode-se verificar, por exemplo , a filial de uma empresa e ainda valores de produtos para a concessão de desconto.


let filial = 1;
let valor = 2000;

// verifica a filial e o valor do produto

--------------------------------------------------

if (filial == 1)
	{
		if(valor > 1000)
			{
				valor = valor - valor * 10/100
			}
		else	{
				valor = valor - valor * 5/100
			}
else
	{
		if(valor > 1000)
			{
				valor = valor - valor * 5/100
			}
		else
			{
				valor = valor - valor * 2/100
			}
	}

document.write("<br>", valor)
		

--------------------------------------------------



Aula 4 


Estrutura de Decisão - Switch e  Boolean

As instruções switch pegam uma única variável como uma entrada e , em seguida , examinam várias opções até encontrarem uma que corresponda ao valor da variável, executando o código correspondente.

Existe o teste de valores boolean (true/false). Qualquer valor que não seja false, undefined , null , 0 , NaN, ou uma string vazia (" ") retorna o valor true quando é testado como uma instrução condicional , é possível usar um nome de variável para testar se é verdadeiro.


----------------------------------------

let filial = 1 ;

if (filial == 1 )
{document.write("filial 1 ")}
else if (filial == 2) {document.write("filial 2")}
else if (filial == 3) {document.write("filial 3")}
else if (filial == 4) {document.write("filial 4")}
else {document.write("filial 5")}

document.write("<br>")

/* INTERRUPTOR */

switch (filial)
{
case 1: document.write("filial 1");
break;
case 2: document.write("filial 2");
break;
case 3: document.write("filial 3");
break;
case 4: document.write("filial 4");
break;
default: document.write("filial 5");
}
document.write("<br>")


//Switch : exemplo de uso , para meses do ano , dentro dos 12 , um dos casos será o mes escolhido.

<!-- BOOLEAN -->

document.write(" <br> Boolean <br> ")

let n1 = 1;

if (n1)

{document.write("True")}
else
{document.write("False")}


Aula 5 

Estrutura de repetição - While

A estrutura de repetição while executa seus comandos enquanto uma condição especificada é avaliada como verdadeira. Ela já foi vista na Unidade 3.

A caracteristica do while é que os comandos podem não ser executados caso a condição já seja falsa na sua primeira execução.


------------------------------------------------

var contador = 1;

while (contador <= 10)
	{//Executa 10 vezes, com os valores do contador de 1 a 10

		document.write("Contador " , contador , "<br>");

		contador = contador + 1;
	}



Aula 6 

Estrutura de repetição - For e DO WHILE

Uma laço for é repetido até que a condição especificada seja falsa 

A instrução DO...While repetirá até que a condição especificada seja falsa. Diferentemente da estrutura de repetição WHILE ,a estrutura DO...WHILE executará ao menos uma vez os comandos, pois a condição de parada está no final da sua estrutura.



//Estrutura de repetição FOR

for (contador1 = 0; contador1 < 5; contador1++)
{//Executa 5 vezes, com os valores de passos de 0 a 4 
document.write (contador1, FOR <br>");}


//Estrutura de repetição do while
contador2 = 0;

do
{//Executa 5 vezes, com os valores do contador de 0 a 4 
document.write(contador2, " DO <br>");
}

while (contador3 < 5)
//Estrutura de repetição do while
contador3 = 0;
while (contador3 < 5)
{//Executa 5 vezes, com os valores do contador de 0 a 4
document.write(contador3, " WHILE <br>");
contador3 = contador3 + 1 ;
}



Aula 7


Página Dinâmica 

Com o Javascript é possível fazer atualização de elementos da página no navegador do usuário , ao invés de baixar essas atualizações do servidor WEB.

Isso proporciona uma agilidade maior para a página e essa utilização de scripts para atualização de elementos é chamada de páginas dinâmicas. 

Uma situação bastante comum na atualização de elementos de uma página é a disponibilização de data e hora.


Design Responsivo 

No inicio do desenvolvimento das páginas web o design não se preocupava com o tamanho das telas, pois a maioria tinha o mesmo tamanho.

Se o tamanho fosse maior ou menor que o padrão, apareciam indesejadas barras de rolagem e o espaço da página era inadequado

Conforme as medidas das telas utilizadas foram ficando cada vez mais variadas , desde smartphones até TVs de grandes polegadas, surgiu o conceito de web design responsivo (RWD), que é um conjunto de práticas onde páginas web alteram seu leiaute aparência adequando-se a diferentes larguras , alturas e resoluções de telas.



Design Responsivo 

Isso alterou o modo de projeto de desenvolvimento das páginas web, que apresentam multiplos dispositivos de acesso a essas páginas e com usuários cada vez mais atentos e exigentes quanto à formatação e disposição dos elementos de design apresentados nas páginas , independente do dispositivo que ele esteja utilizando.

MEDIA QUERIES e GRIDS FLEXÍVEIS são as principais técnicas que podem ser aplicadas no desenvolvimento de páginas WEB para elas apresentarem um design responsivo. Lembrando que são técnicas combinadas que utilizam vários conceitos ao mesmo tempo.


Interface Amigavel 

Interface amigável é uma interação onde o usuário encontra facilidades de navegação e que permite uma fluidez na utilização de um software ou página da internet.

Para o desenvolvimento de sites amigáveis e que utliizem a HTML e o Javascript é utilizado o REACT, que conforme a definição dos seus criadores (react.org) "é uma biblioteca javascript declarativa, eficieten e flexível para a criação de interface do usuário (UI)".


O react apresenta algumas características que o destaca entre as linguagens modernas de desenvolvimento de aplicativos WEB.

- É uma biblioteca, ou seja , uma coleção de funcionalidades.

- Utiliza a mesma linguagem de programação do JavaScript

- É uma linguagem de programação declarativa

- No React tudo é componente

- O React é eficiente propondo o seu próprio DOM (Document Object Model)

- Utilizado para desenvolver aplicativos móveis

- Muito utilizado e admirado pelos desenvolvedores


Ferramenta de Depuração 

Depurar ou debugar o código de um sistema é analisar passo a passo a execução , geralmente de uma parte que está apresentando problema.

O javascript é uma linguagem client-side , ou seja,  é uma linguagem executada no lado do cliente, especificamente no equipamento do cliente e não no servidor WEB. E essa depuração será possível , pois pode ser feita através do navegador/browser.

A desvantagem dessa possiblidade do JavaScript é que se o desenvolvedor pode fazer essa depuração pelo navegador o usuário também poderá fazer.

E isso pode trazer alguns riscos, dependendo de como o código foi implementado, já que o javascript é uma linguagem auxliar e parâmetros de conexão com banco de dados e segurança de usuários estão expostos, deixando o sistema vulnerável a ataques.

Para evitar esse tipo de problema esses parâmetros devem ser implementados na linguagem principal do sistema, utilizando o JavaScript para implementar interfaces amigáveis e procedimentos que exigem respostas em tempo real.



Conclusão unidade 4 

Está unidade trouxe o complemento da lógica de programação com mais formas de estruturas de repetição e decisão 

Como foi visto na unidade 3 a importância dessas estruturas na aplicação das regras de negócio, também é importante conhecer as diversas formas que essas estruturas podem ser aplicadas, pois podem ser úteis em diversos momentos do desenvolvimento de uma página.

Outro ponto importante , visto nessa unidade , foi a criação de páginas dinãmicas e responsivas que se adaptam aos diversos equipamentos utilizados para a navegação nas páginas e sistemas WEB. Também foi abordado a implantação de interfaces amigáveis que possibilitam fluidez na navegação de uma página.

E para finalizar a Unidade , as ferramentas de depuração de uma página foram mostradas . Com elas é possível verificar o fluxo de uma estrutura de lógica de programação foi implantada e essa possibilidade facilita a resolução de possíveis problemas de programação .

O conteúdo das quatros unidades , trabalhando na disciplica de Desenvolvimento WEB , possibilita a criação de páginas e sistemas WEB de baixa complexidade.

Portanto há muitas possibilidades de crescimento e aprendizado a partir dos assuntos tratados nesta disciplina

O ambiente de desenvolvimento de sistemas é muito dinâmico e está em constante evolução cabendo aos desenvolvedores estarem atentos a novas tecnologias e tendências do mercado.



